name: backend-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Build (skip tests)
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER || 'ubuntu' }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*SNAPSHOT.jar"
          target: "/home/ubuntu/deploy_artifacts/build/libs/"

      - name: Swap JAR & restart service
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER || 'ubuntu' }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo mkdir -p /opt/carrot
            sudo mkdir -p /home/ubuntu/deploy_artifacts/build/libs
            JAR_SRC=$(ls -t /home/ubuntu/deploy_artifacts/build/libs/*SNAPSHOT.jar | head -n 1)
            if [ -z "$JAR_SRC" ]; then
              echo "ERROR: boot jar not found"; ls -alh /home/ubuntu/deploy_artifacts/build/libs; exit 1
            fi
            echo "Using artifact: $JAR_SRC"
            sudo cp "$JAR_SRC" /opt/carrot/app.jar.new
            sudo mv -f /opt/carrot/app.jar.new /opt/carrot/app.jar
            sudo systemctl restart carrot
            sudo systemctl status carrot --no-pager || true
